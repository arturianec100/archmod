#message("common ${CMAKE_CURRENT_LIST_DIR}")
set (AM_ROOT ${CMAKE_CURRENT_LIST_DIR})

#Process cmake files of libraries
if(NOT EMSCRIPTEN)
  find_package(SDL2 REQUIRED CONFIG REQUIRED COMPONENTS SDL2)
  find_package(SDL2 REQUIRED CONFIG COMPONENTS SDL2main)
  find_package(SDL2_ttf REQUIRED CONFIG REQUIRED COMPONENTS SDL2_ttf)
  find_package(SDL2_image REQUIRED CONFIG REQUIRED COMPONENTS SDL2_image)
  find_package(SDL2_mixer REQUIRED CONFIG REQUIRED COMPONENTS SDL2_mixer)
endif()

#RmlUi
if(EMSCRIPTEN)
  include("${AM_ROOT}/thirdparty/RmlUi/CMake/Modules/Emscripten/FindFreetype.cmake")
endif()
add_subdirectory("${AM_ROOT}/thirdparty/RmlUi")

#Functions
function(am_common_options target)
  set_property(TARGET ${target} PROPERTY CXX_STANDARD 20)
  set_property(TARGET ${target} PROPERTY CMAKE_CXX_STANDARD_REQUIRED YES)
  set(options -Wall -Wextra -Wshadow -Wnon-virtual-dtor)
  target_link_options(${target} PUBLIC ${options})
  target_compile_options(${target} PUBLIC ${options})
  if(EMSCRIPTEN)
    set(options -sALLOW_MEMORY_GROWTH=1 -sMAXIMUM_MEMORY=16gb)
    target_link_options(${target} PUBLIC ${options})
    target_compile_options(${target} PUBLIC ${options})
  endif()
endfunction()

function(am_use_sdl target)
  if(EMSCRIPTEN)
    set(options --use-port=sdl2 --use-port=sdl2_ttf --use-port=sdl2_image --use-port=sdl2_mixer)
    target_link_options(${target} PUBLIC ${options})
    target_compile_options(${target} PUBLIC ${options})
  else()
    if(TARGET SDL2::SDL2main)
      target_link_libraries(${target} PRIVATE SDL2::SDL2main)
    endif()
    target_link_libraries(${target} PRIVATE SDL2::SDL2 SDL2_ttf::SDL2_ttf SDL2_image::SDL2_image SDL2_mixer::SDL2_mixer)
  endif()
endfunction()

function(am_use_rml target)
  target_include_directories(${target} PRIVATE "{AM_ROOT}/thirdparty/RmlUi/Include")
  target_link_libraries(${target} PRIVATE RmlUi::RmlUi)
endfunction()
